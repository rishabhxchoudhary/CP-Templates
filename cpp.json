{
	"": {
		"prefix": "cptemplate",
		"body": [
		  "#include<bits/stdc++.h>",
		  "using namespace std;",
		  "",
		  "#define int long long int",
		  "#define double long double",
		  "#define endl '\\n'",
		  "",
		  "const int MOD = 1000000007;",
		  "",
		  "void solve(){",
		  "    ",
		  "}",
		  "",
		  "signed main()",
		  "{",
		  "    ios_base::sync_with_stdio(0);",
		  "    cin.tie(0);cout.tie(0);",
		  "",
		  "    int t=1;",
		  "    cin>>t;",
		  "    while(t--){",
		  "        solve();",
		  "    }",
		  "",
		  "    return 0;",
		  "}"
		],
		"description": ""
	  },
	"t2": {
		"prefix": "code",
		"body": [
		  "#include<bits/stdc++.h>",
		  "using namespace std;",
		  "",
		  "#define int long long int",
		  "#define double long double",
		  "#define endl '\\n'",
		  "",
		  "const int MOD = 1000000007;",
		  "",
		  "signed main()",
		  "{",
		  "    ios_base::sync_with_stdio(0);",
		  "    cin.tie(0);cout.tie(0);",
		  "",
		  "\t$0",
		  "",
		  "    return 0;",
		  "}"
		],
		"description": ""
	  },
	"ONLINE_JUDGE": {
		"prefix": "onlinejudge",
		"body": [
			"#ifndef ONLINE_JUDGE",
			"freopen(\"input.txt\",\"r\",stdin);",
			"freopen(\"output.txt\",\"w\",stdout);",
			"#endif"
		],
		"description": ""
	},
	"Vector of Integers": {
		"prefix": "vi",
		"body": [
			"vector<int> $0"
		],
		"description": "Declare a vector<int>"
	},
	"Vector of pair of integers": {
		"prefix": "vpi",
		"body": [
			"vector<pair<int,int>> $0"
		],
		"description": "Declare a vector<pair<int,int>>>"
	},
	"pair of integers": {
		"prefix": "pii",
		"body": [
			"pair<int,int> $0"
		],
		"description": "Declare a vector<pair<int,int>>>"
	},
	"Vector Vector of of Integers": {
		"prefix": "vvi",
		"body": [
			"vector<vector<int>> $0"
		],
		"description": "Declare a vector<vector<int>>"
	},
	"for loop: i from 0 to n-1": {
		"prefix": "fori0",
		"body": [
			"for (int i = 0; i < n; i++) {",
			"\t$0",
			"}"
		],
		"description": "Create a for loop with i ranging from 0 to n-1"
	},
	"for loop: i from 1 to n": {
		"prefix": "fori1",
		"body": [
			"for (int i = 1; i <= n; i++) {",
			"\t$0",
			"}"
		],
		"description": "Create a for loop with i ranging from 1 to n"
	},
	"for loop: j from 0 to n-1": {
		"prefix": "forj0",
		"body": [
			"for (int j = 0; j < n; j++) {",
			"\t$0",
			"}"
		],
		"description": "Create a for loop with j ranging from 0 to n-1"
	},
	"for loop: j from 1 to n": {
		"prefix": "forj1",
		"body": [
			"for (int j = 1; j <= n; j++) {",
			"\t$0",
			"}"
		],
		"description": "Create a for loop with j ranging from 1 to n"
	},
	"for loop: k from 0 to n-1": {
		"prefix": "fork0",
		"body": [
			"for (int k = 0; k < n; k++) {",
			"\t$0",
			"}"
		],
		"description": "Create a for loop with k ranging from 0 to n-1"
	},
	"for loop: k from 1 to n": {
		"prefix": "fork1",
		"body": [
			"for (int k = 1; k <= n; k++) {",
			"\t$0",
			"}"
		],
		"description": "Create a for loop with k ranging from 1 to n"
	},
	"geometry template for point": {
		"prefix": "point",
		"body": [
		  "struct P {",
		  "    int x,y;",
		  "    void read() {",
		  "        cin>>x>>y;",
		  "    }",
		  "    P operator - (const P &b) const {",
		  "        return P {x-b.x , y-b.y};",
		  "    }",
		  "    P operator + (const P &b) const {",
		  "        return P {x+b.x , y+b.y};",
		  "    }",
		  "    void operator -= (const P &b)  {",
		  "        x-=b.x; y-=b.y;",
		  "    }",
		  "    void operator += (const P &b)  {",
		  "        x+=b.x; y+=b.y;",
		  "    }",
		  "    int operator *(const P &b) const {",
		  "        return x*b.y - y*b.x;",
		  "    }",
		  "};"
		],
		"description": ""
	  },
	  "Policy Based Data Structures": {
		"prefix": "pbds",
		"body": [
		  "#include <ext/pb_ds/assoc_container.hpp>",
		  "#include <ext/pb_ds/tree_policy.hpp>",
		  "using namespace __gnu_pbds;",
		  "template<class T> using ordered_set =tree<T, null_type, less<T>, rb_tree_tag,tree_order_statistics_node_update>;",
		],
		"description": ""
	  },
	  "Debug Template": {
		"prefix": "debugtemplate",
		"body": [
		  "#ifndef ONLINE_JUDGE",
		  "#define debug(x) cerr << #x <<\" \"; _print(x); cerr << endl;",
		  "#else",
		  "#define debug(x)",
		  "#endif",
		  "",
		  "void _print(int t) {cerr << t;}",
		  "void _print(string t) {cerr << t;}",
		  "void _print(char t) {cerr << t;}",
		  "void _print(double t) {cerr << t;}",
		  "void _print(unsigned int t) {cerr << t;}",
		  "",
		  "template <class T, class V> void _print(pair <T, V> p);",
		  "template <class T> void _print(vector <T> v);",
		  "template <class T> void _print(set <T> v);",
		  "template <class T, class V> void _print(map <T, V> v);",
		  "template <class T> void _print(multiset <T> v);",
		  "template <class T, class V> void _print(pair <T, V> p) {cerr << \"{\"; _print(p.first); cerr << \",\"; _print(p.second); cerr << \"}\";}",
		  "template <class T> void _print(vector <T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}",
		  "template <class T> void _print(set <T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}",
		  "template <class T> void _print(multiset <T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}",
		  "template <class T, class V> void _print(map <T, V> v) {cerr << \"[ \"; for (auto i : v) {_print(i); cerr << \" \";} cerr << \"]\";}",
		],
		"description": ""
	  }
}
